/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 16 14:22:12 GMT 2019
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang.WordUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class WordUtils_ESTest extends WordUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = WordUtils.abbreviate("Pw8l5qlyzsfnbdsg6~ ", 0, 2, "org.apache.commons.lang.WordUtils");
      assertEquals("Pworg.apache.commons.lang.WordUtils", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = WordUtils.abbreviate(" ", (-927), 0, "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = WordUtils.abbreviate("java.class.version", (-1), (-1), "java.awt.fonts");
      assertEquals("java.class.version", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = WordUtils.abbreviate("+mzz", 3359, (-1), (String) null);
      assertEquals("+mzz", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = WordUtils.abbreviate(" ", 1, 1, "cE3R3w");
      assertEquals(" ", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      char[] charArray0 = new char[3];
      String string0 = WordUtils.capitalizeFully("S,,`", charArray0);
      assertEquals("S,,`", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = WordUtils.wrap("u Bn*?O", 1, "CC X3X=)+8d&E+].m*", true);
      assertEquals("uCC X3X=)+8d&E+].m*BCC X3X=)+8d&E+].m*nCC X3X=)+8d&E+].m**CC X3X=)+8d&E+].m*?CC X3X=)+8d&E+].m*O", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = WordUtils.wrap("[b-W$n+(%'", (-220), "org.apache.commons.lang.WordUtils", true);
      assertEquals("[org.apache.commons.lang.WordUtilsborg.apache.commons.lang.WordUtils-org.apache.commons.lang.WordUtilsWorg.apache.commons.lang.WordUtils$org.apache.commons.lang.WordUtilsnorg.apache.commons.lang.WordUtils+org.apache.commons.lang.WordUtils(org.apache.commons.lang.WordUtils%org.apache.commons.lang.WordUtils'", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = WordUtils.wrap((String) null, 441);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = WordUtils.wrap("", 1406);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = WordUtils.uncapitalize((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = WordUtils.initials((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = WordUtils.capitalize((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = WordUtils.capitalize("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        WordUtils.abbreviate("r7N*t`M[nP", (-312), (-312), "Mac OS X");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = WordUtils.initials(" ", (char[]) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      char[] charArray0 = new char[2];
      String string0 = WordUtils.initials("", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = WordUtils.uncapitalize(" ", (char[]) null);
      assertEquals(" ", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully("=*~*(kxs}5d&4+", (char[]) null);
      assertEquals("=*~*(kxs}5d&4+", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'i';
      String string0 = WordUtils.capitalize("user.dir", charArray0);
      assertEquals("User.diR", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = WordUtils.capitalize("", (char[]) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = WordUtils.wrap(",6P 7i2M][<9", (-508), (String) null, false);
      assertEquals(",6P\n7i2M][<9", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String string0 = WordUtils.abbreviate("q\"?$HgZ.{N WL`Nh[!", 1, 0, "fc^v[,lChs<|;`");
      assertEquals("qfc^v[,lChs<|;`", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = WordUtils.abbreviate("e/fy LY\"@HQew", 0, '>', "");
      assertEquals("e/fy", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String string0 = WordUtils.abbreviate("/vspwlm\"mx", 0, 0, "/vspwlm\"mx");
      assertEquals("/vspwlm\"mx", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String string0 = WordUtils.abbreviate("", 0, 412, "tl-S<U,!RbJRfF:f0[");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String string0 = WordUtils.abbreviate((String) null, 13, 1462, " ");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[1] = 'e';
      String string0 = WordUtils.initials("Org.apache.commons.lang.wordutiLs", charArray0);
      assertEquals("O.", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.initials("tl-S<U,!RbJRfF:f0[", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String string0 = WordUtils.initials("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      char[] charArray0 = new char[1];
      String string0 = WordUtils.initials((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String string0 = WordUtils.swapCase("pW8l5QLyZsfnBdsG6~ ");
      assertEquals("Pw8L5qlYzSFNbDSg6~ ", string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String string0 = WordUtils.swapCase("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String string0 = WordUtils.swapCase((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'Q';
      String string0 = WordUtils.uncapitalize("ppW8l5QLyZsfnBdsG6~ WpW8l5QLyZsfnBdsG6~ 8pW8l5QLyZsfnBdsG6~ lpW8l5QLyZsfnBdsG6~ 5pW8l5QLyZsfnBdsG6~ QpW8l5QLyZsfnBdsG6~ LpW8l5QLyZsfnBdsG6~ ypW8l5QLyZsfnBdsG6~ ZpW8l5QLyZsfnBdsG6~ spW8l5QLyZsfnBdsG6~ fpW8l5QLyZsfnBdsG6~ npW8l5QLyZsfnBdsG6~ BpW8l5QLyZsfnBdsG6~ dpW8l5QLyZsfnBdsG6~ spW8l5QLyZsfnBdsG6~ GpW8l5QLyZsfnBdsG6~ 6pW8l5QLyZsfnBdsG6~ ~pW8l5QLyZsfnBdsG6~ ", charArray0);
      assertEquals("ppW8l5QlyZsfnBdsG6~ WpW8l5QlyZsfnBdsG6~ 8pW8l5QlyZsfnBdsG6~ lpW8l5QlyZsfnBdsG6~ 5pW8l5QlyZsfnBdsG6~ QpW8l5QlyZsfnBdsG6~ LpW8l5QlyZsfnBdsG6~ ypW8l5QlyZsfnBdsG6~ ZpW8l5QlyZsfnBdsG6~ spW8l5QlyZsfnBdsG6~ fpW8l5QlyZsfnBdsG6~ npW8l5QlyZsfnBdsG6~ BpW8l5QlyZsfnBdsG6~ dpW8l5QlyZsfnBdsG6~ spW8l5QlyZsfnBdsG6~ GpW8l5QlyZsfnBdsG6~ 6pW8l5QlyZsfnBdsG6~ ~pW8l5QlyZsfnBdsG6~ ", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.uncapitalize("D&&1&g#l>`|4KReA", charArray0);
      assertEquals("D&&1&g#l>`|4KReA", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String string0 = WordUtils.uncapitalize("5>v");
      assertEquals("5>v", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      char[] charArray0 = new char[3];
      String string0 = WordUtils.uncapitalize((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.uncapitalize("", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      char[] charArray0 = new char[1];
      String string0 = WordUtils.capitalizeFully("", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      char[] charArray0 = new char[1];
      String string0 = WordUtils.capitalizeFully((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalizeFully("/vspwlm\"mx", charArray0);
      assertEquals("/vspwlm\"mx", string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalize("-[YR-]:-", charArray0);
      assertEquals("-[YR-]:-", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      char[] charArray0 = new char[1];
      String string0 = WordUtils.capitalize((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      String string0 = WordUtils.wrap("pW8l5QLyZsfnBdsG6~ ", 0, "pW8l5QLyZsfnBdsG6~ ", true);
      assertEquals("ppW8l5QLyZsfnBdsG6~ WpW8l5QLyZsfnBdsG6~ 8pW8l5QLyZsfnBdsG6~ lpW8l5QLyZsfnBdsG6~ 5pW8l5QLyZsfnBdsG6~ QpW8l5QLyZsfnBdsG6~ LpW8l5QLyZsfnBdsG6~ ypW8l5QLyZsfnBdsG6~ ZpW8l5QLyZsfnBdsG6~ spW8l5QLyZsfnBdsG6~ fpW8l5QLyZsfnBdsG6~ npW8l5QLyZsfnBdsG6~ BpW8l5QLyZsfnBdsG6~ dpW8l5QLyZsfnBdsG6~ spW8l5QLyZsfnBdsG6~ GpW8l5QLyZsfnBdsG6~ 6pW8l5QLyZsfnBdsG6~ ~pW8l5QLyZsfnBdsG6~ ", string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      String string0 = WordUtils.wrap(" is less than 0: ", 13, " is less than 0: ", true);
      assertEquals("is less than is less than 0: 0: ", string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      String string0 = WordUtils.wrap("/vspwlm\"mx", 0);
      assertEquals("/vspwlm\"mx", string0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String string0 = WordUtils.wrap("", 560, " ", true);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      String string0 = WordUtils.wrap((String) null, 13, "dJ)^^2", false);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      WordUtils wordUtils0 = new WordUtils();
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      String string0 = WordUtils.uncapitalize("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String string0 = WordUtils.initials("@q@9&HcJ%;MXl])Xfw");
      assertEquals("@", string0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully("pW8l5QLyZsfnBdsG6~ ");
      assertEquals("Pw8l5qlyzsfnbdsg6~ ", string0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      String string0 = WordUtils.capitalize("user.region");
      assertEquals("User.region", string0);
  }
}
