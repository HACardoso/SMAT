/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 16 14:24:26 GMT 2019
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang.WordUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class WordUtils_ESTest extends WordUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = WordUtils.abbreviate("Windows 9", 0, (-1629), "iT^<. @7zvYq9ov");
      assertEquals("iT^<. @7zvYq9ov", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = WordUtils.abbreviate(" 89Kb/q5UV", 0, 0, "TTsrZfT");
      assertEquals("TTsrZfT", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        WordUtils.abbreviate("ajS* OIQ", (-95), (-95), "user.language");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = WordUtils.abbreviate("#Mk*/~xWB^cN$>c", 4, 15, "#Mk*/~xWB^cN$>c");
      assertEquals("#Mk*/~xWB^cN$>c", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = WordUtils.abbreviate("{", 1, 0, "{");
      assertEquals("{", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = WordUtils.wrap("o\nr\ng\n.\na\np\na\nc\nh\ne\n.\nc\no\nm\nm\no\nn\ns\n.\nl\na\nn\ng\n.\nW\no\nr\nd\nU\nt\ni\nl\ns", 19, "Z", true);
      assertEquals("o\nr\ng\n.\na\np\na\nc\nh\neZ\n.\nc\no\nm\nm\no\nn\ns\n.\nZl\na\nn\ng\n.\nW\no\nr\nd\nUZ\nt\ni\nl\ns", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = WordUtils.wrap((String) null, (-425));
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = WordUtils.wrap("", (-414));
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = WordUtils.uncapitalize("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = WordUtils.initials("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = WordUtils.capitalize((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = WordUtils.capitalize("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = WordUtils.wrap("hi#]yIf<cU;K(@ P", 0, "hHi#]yIf<cU;K(@\nPiHi#]yIf<cU;K(@\nP#Hi#]yIf<cU;K(@\nP]Hi#]yIf<cU;K(@\nPyHi#]yIf<cU;K(@\nPIHi#]yIf<cU;K(@\nPfHi#]yIf<cU;K(@\nP<Hi#]yIf<cU;K(@\nPcHi#]yIf<cU;K(@\nPUHi#]yIf<cU;K(@\nP;Hi#]yIf<cU;K(@\nPKHi#]yIf<cU;K(@\nP(Hi#]yIf<cU;K(@\nP@Hi#]yIf<cU;K(@\nPP", true);
      char[] charArray0 = new char[5];
      // Undeclared exception!
      WordUtils.initials(string0, charArray0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[1] = 'e';
      String string0 = WordUtils.initials("0<0<Oav%b~e|D.5", charArray0);
      assertEquals("0|", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = WordUtils.initials(",[c02<P", (char[]) null);
      assertEquals(",", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      char[] charArray0 = new char[5];
      String string0 = WordUtils.initials((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[2] = '~';
      String string0 = WordUtils.uncapitalize(":hAI{3'c^^~?(G&k4O", charArray0);
      assertEquals(":hAI{3'c^^~?(G&k4O", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      char[] charArray0 = new char[2];
      String string0 = WordUtils.uncapitalize((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = WordUtils.uncapitalize(",[c02<P", (char[]) null);
      assertEquals(",[c02<P", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      char[] charArray0 = new char[1];
      String string0 = WordUtils.capitalizeFully("", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully(",[C02<p", (char[]) null);
      assertEquals(",[c02<p", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = '\'';
      String string0 = WordUtils.capitalize("Cu;'u.'X", charArray0);
      assertEquals("Cu;'U.'X", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = WordUtils.capitalize(",[C02<p", (char[]) null);
      assertEquals(",[C02<p", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String string0 = WordUtils.wrap(".1*\"2rc ,", 2, "!GQ@5P]", false);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = WordUtils.wrap(" R~zpAo", (-1), " R~zpAo", true);
      assertEquals("R R~zpAo~ R~zpAoz R~zpAop R~zpAoA R~zpAoo", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String string0 = WordUtils.wrap(",nU^KivP|'J%U.K=", 2, (String) null, false);
      assertNotNull(string0);
      assertEquals(",nU^KivP|'J%U.K=", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String string0 = WordUtils.abbreviate("Minimum abbreviation width with offset is 7", 1, 3, "Minimum abbreviation width with offset is 7");
      assertEquals("MinMinimum abbreviation width with offset is 7", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String string0 = WordUtils.abbreviate(" 9", 0, 158, "y[,C];.mW");
      assertEquals("y[,C];.mW", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String string0 = WordUtils.abbreviate("a;-fc%;3,uWSG\"GhC~Q", (-3867), (-1), "*wIpZSe+QIPM5o");
      assertEquals("a;-fc%;3,uWSG\"GhC~Q", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String string0 = WordUtils.abbreviate("9", 158, 0, " 9");
      assertEquals("9", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String string0 = WordUtils.abbreviate("", 3550, 3550, "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String string0 = WordUtils.abbreviate((String) null, 563, 1, (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String string0 = WordUtils.abbreviate("ytb99j&T:tUL", (-1746), 0, "YTB99J&t:Tul");
      assertNotNull(string0);
      assertEquals("YTB99J&t:Tul", string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[2] = 'a';
      String string0 = WordUtils.capitalizeFully("a:N&Z]zmt|tw", charArray0);
      assertEquals("a:n&z]zmt|tw", string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String string0 = WordUtils.initials(" 9");
      assertEquals("9", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.initials("VG~7%z9b", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String string0 = WordUtils.initials("", (char[]) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String string0 = WordUtils.initials((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String string0 = WordUtils.swapCase("ytb99j&T:tUL");
      assertEquals("YTB99J&t:Tul", string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      String string0 = WordUtils.swapCase("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String string0 = WordUtils.swapCase((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      String string0 = WordUtils.uncapitalize(",[c02<P");
      assertEquals(",[c02<P", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.uncapitalize(" ", charArray0);
      assertEquals(" ", string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      String string0 = WordUtils.uncapitalize((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.uncapitalize("", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalizeFully("y[,C];.mW", charArray0);
      assertEquals("y[,C];.mW", string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      char[] charArray0 = new char[6];
      String string0 = WordUtils.capitalizeFully((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalize("LxK<V4NK*vN|:#7`<S\"", charArray0);
      assertEquals("LxK<V4NK*vN|:#7`<S\"", string0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalize("", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      String string0 = WordUtils.capitalize((String) null, (char[]) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      String string0 = WordUtils.wrap("hHi#]yIf<cU;K(@ PiHi#]yIf<cU;K(@ P#Hi#]yIf<cU;K(@ P]Hi#]yIf<cU;K(@ PyHi#]yIf<cU;K(@ PIHi#]yIf<cU;K(@ PfHi#]yIf<cU;K(@ P<Hi#]yIf<cU;K(@ PcHi#]yIf<cU;K(@ PUHi#]yIf<cU;K(@ P;Hi#]yIf<cU;K(@ PKHi#]yIf<cU;K(@ P(Hi#]yIf<cU;K(@ P@Hi#]yIf<cU;K(@ PP", (-4844));
      assertNotNull(string0);
      assertEquals("hHi#]yIf<cU;K(@\nPiHi#]yIf<cU;K(@\nP#Hi#]yIf<cU;K(@\nP]Hi#]yIf<cU;K(@\nPyHi#]yIf<cU;K(@\nPIHi#]yIf<cU;K(@\nPfHi#]yIf<cU;K(@\nP<Hi#]yIf<cU;K(@\nPcHi#]yIf<cU;K(@\nPUHi#]yIf<cU;K(@\nP;Hi#]yIf<cU;K(@\nPKHi#]yIf<cU;K(@\nP(Hi#]yIf<cU;K(@\nP@Hi#]yIf<cU;K(@\nPP", string0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String string0 = WordUtils.wrap("", 3297, " ", true);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      String string0 = WordUtils.wrap((String) null, (int) 'B', (String) null, false);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      WordUtils wordUtils0 = new WordUtils();
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully("9");
      assertEquals("9", string0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      String string0 = WordUtils.capitalize("hi#]yIf<cU;K(@ P");
      assertEquals("Hi#]yIf<cU;K(@ P", string0);
      
      char[] charArray0 = new char[5];
      String string1 = WordUtils.initials(string0, charArray0);
      assertEquals("H", string1);
  }
}
