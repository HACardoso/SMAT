/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 16 14:13:47 GMT 2019
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang.WordUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class WordUtils_ESTest extends WordUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = WordUtils.abbreviate("Windows 9", (-1348), 0, "u1L(W");
      assertEquals("u1L(W", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = WordUtils.abbreviate(" ", 0, 0, "path.separator");
      assertEquals("path.separator", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = WordUtils.abbreviate("CRc^;#2Q", (-819), 5, "");
      assertEquals("CRc^;", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = WordUtils.abbreviate("CRc^;", (-819), 5, "org.apache.commons.lang.WordUtils");
      assertEquals("CRc^;", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = WordUtils.abbreviate("g^", 2, ']', " ");
      assertEquals("g^", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[2] = 'v';
      String string0 = WordUtils.initials("6i]v=/^r'VU*@8*G2GJ=", charArray0);
      assertEquals("6=", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = WordUtils.wrap("Windows NT", (-2775), "Windows NT", true);
      assertEquals("WWindows NTiWindows NTnWindows NTdWindows NToWindows NTwWindows NTsWindows NTNWindows NTT", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = WordUtils.wrap("", 1423, " ", false);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = WordUtils.wrap("g^", 427);
      assertEquals("g^", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = WordUtils.uncapitalize((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = WordUtils.uncapitalize("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = WordUtils.initials("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = WordUtils.capitalize("LhA{");
      assertEquals("LhA{", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = WordUtils.capitalize("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      char[] charArray0 = new char[4];
      String string0 = WordUtils.initials((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = WordUtils.uncapitalize("iP{_2", (char[]) null);
      assertEquals("iP{_2", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      char[] charArray0 = new char[6];
      String string0 = WordUtils.capitalizeFully((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalizeFully("os.version", charArray0);
      assertEquals("os.version", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully("", (char[]) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      char[] charArray0 = new char[5];
      String string0 = WordUtils.capitalize((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = WordUtils.capitalize("8-T (u 8v", (char[]) null);
      assertEquals("8-T (u 8v", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = WordUtils.wrap("I", 0, (String) null, true);
      assertEquals("I", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = WordUtils.wrap((String) null, 1, "", false);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
      try { 
        WordUtils.abbreviate("zX`{Wc ^hBQ[", (-296), (-425), "L");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String string0 = WordUtils.abbreviate("zbz %", 2, 32, "od");
      assertEquals("zbzod", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = WordUtils.abbreviate("HEHo.JyV;A)duQn", 1589, (-286), "k_(XKPR2,NL k1)+^XGC{s}s6M9aEigV_+;1_(XKPR2,NL k1)+^XGC{s}s6M9aEigV_+;)_(XKPR2,NL k1)+^XGC{s}s6M9aEigV_+;+_(XKPR2,NL k1)+^XGC{s}s6M9aEigV_+;^_(XKPR2,NL k1)+^XGC{s}s6M9aEigV_+;X_(XKPR2,NL k1)+^XGC{s}s6M9aEigV_+;G_(XKPR2,NL k1)+^XGC{s}s6M9aEigV_+;C_(XKPR2,NL k1)+^XGC{s}s6M9aEigV_+;{_(XKPR2,NL k1)+^XGC{s}s6M9aEigV_+;s_(XKPR2,NL k1)+^XGC{s}s6M9aEigV_+;}_(XKPR2,NL k1)+^XGC{s}s6M9aEigV_+;s_(XKPR2,NL k1)+^XGC{s}s6M9aEigV_+;6_(XKPR2,NL k1)+^XGC{s}s6M9aEigV_+;M_(XKPR2,NL k1)+^XGC{s}s6M9aEigV_+;9");
      assertEquals("HEHo.JyV;A)duQn", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String string0 = WordUtils.abbreviate("", 1183, 0, "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String string0 = WordUtils.abbreviate((String) null, 0, 0, "os.arch");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String string0 = WordUtils.abbreviate("uSiP>jiTHinq0[9", 505, (-1), "Xl*6,");
      assertEquals("uSiP>jiTHinq0[9", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String string0 = WordUtils.initials(" ", (char[]) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.initials("org.apache.commons.lang.WordUtils", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String string0 = WordUtils.initials("9v");
      assertEquals("9", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      char[] charArray0 = new char[4];
      String string0 = WordUtils.initials("", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String string0 = WordUtils.initials((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String string0 = WordUtils.swapCase("Xl*6,");
      assertEquals("xL*6,", string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String string0 = WordUtils.swapCase("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String string0 = WordUtils.swapCase("m@k8}a'f");
      assertEquals("M@K8}A'F", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String string0 = WordUtils.swapCase((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[4] = '';
      String string0 = WordUtils.uncapitalize("C&z7V", charArray0);
      assertEquals("c&z7V", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.uncapitalize("[t", charArray0);
      assertEquals("[t", string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      char[] charArray0 = new char[3];
      String string0 = WordUtils.uncapitalize("", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      char[] charArray0 = new char[5];
      String string0 = WordUtils.uncapitalize((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      char[] charArray0 = new char[3];
      String string0 = WordUtils.capitalizeFully("line.separator", charArray0);
      assertEquals("Line.separator", string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully("sCT6=`Hyh$D[L");
      assertEquals("Sct6=`hyh$d[l", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalize("b", charArray0);
      assertEquals("b", string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalize("", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      String string0 = WordUtils.wrap("_(XKPR2,NL aEigV_+;", (-286), " k1)+^XGC{s}s6M9", false);
      assertEquals("_(XKPR2,NL k1)+^XGC{s}s6M9aEigV_+;", string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      String string0 = WordUtils.wrap(" k1)+^XGC{s}s6M9", (-286), "_(XKPR2,NL k1)+^XGC{s}s6M9aEigV_+;", true);
      assertEquals("k_(XKPR2,NL k1)+^XGC{s}s6M9aEigV_+;1_(XKPR2,NL k1)+^XGC{s}s6M9aEigV_+;)_(XKPR2,NL k1)+^XGC{s}s6M9aEigV_+;+_(XKPR2,NL k1)+^XGC{s}s6M9aEigV_+;^_(XKPR2,NL k1)+^XGC{s}s6M9aEigV_+;X_(XKPR2,NL k1)+^XGC{s}s6M9aEigV_+;G_(XKPR2,NL k1)+^XGC{s}s6M9aEigV_+;C_(XKPR2,NL k1)+^XGC{s}s6M9aEigV_+;{_(XKPR2,NL k1)+^XGC{s}s6M9aEigV_+;s_(XKPR2,NL k1)+^XGC{s}s6M9aEigV_+;}_(XKPR2,NL k1)+^XGC{s}s6M9aEigV_+;s_(XKPR2,NL k1)+^XGC{s}s6M9aEigV_+;6_(XKPR2,NL k1)+^XGC{s}s6M9aEigV_+;M_(XKPR2,NL k1)+^XGC{s}s6M9aEigV_+;9", string0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String string0 = WordUtils.wrap((String) null, 0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      WordUtils wordUtils0 = new WordUtils();
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      String string0 = WordUtils.uncapitalize("java.ext.dirs");
      assertEquals("java.ext.dirs", string0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      String string0 = WordUtils.wrap("", 0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      String string0 = WordUtils.capitalize((String) null);
      assertNull(string0);
  }
}
