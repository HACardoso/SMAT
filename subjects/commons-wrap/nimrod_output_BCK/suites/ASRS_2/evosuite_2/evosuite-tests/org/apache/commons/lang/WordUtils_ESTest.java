/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 16 14:30:45 GMT 2019
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang.WordUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class WordUtils_ESTest extends WordUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = WordUtils.abbreviate(" ", 0, 0, " ");
      assertEquals(" ", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = WordUtils.abbreviate("4rr#]&", (-1), (-1), (String) null);
      assertEquals("4rr#]&", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = WordUtils.abbreviate(" ", (-1675), 1, "cV`[)dw[:W>^v");
      assertEquals("cV`[)dw[:W>^v", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = WordUtils.abbreviate("G", 1, 0, "m}TWbBk<=G*v=p");
      assertEquals("G", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = WordUtils.wrap("Y,7z 6", 0, "org.apache.commons.lang.WordUtils", true);
      assertEquals("Yorg.apache.commons.lang.WordUtils,org.apache.commons.lang.WordUtils7org.apache.commons.lang.WordUtilszorg.apache.commons.lang.WordUtils6", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = WordUtils.wrap("[EHp'?+*VCR'tQlEHp'?+*VCR'tQ[EHp'?+*VCR'tQ<EHp'?+*VCR'tQlEHp'?+*\nVCR'tQuEHp'?+*VCR'tQ%EHp'?+*VCR'tQ6EHp'?+*VCR'tQ)EHp'?+*VCR'tQCE\nHp'?+*VCR'tQjEHp'?+*VCR'tQsEHp'?+*VCR'tQ_", (-985), "", true);
      assertEquals("[EHp'?+*VCR'tQlEHp'?+*VCR'tQ[EHp'?+*VCR'tQ<EHp'?+*VCR'tQlEHp'?+*\nVCR'tQuEHp'?+*VCR'tQ%EHp'?+*VCR'tQ6EHp'?+*VCR'tQ)EHp'?+*VCR'tQCE\nHp'?+*VCR'tQjEHp'?+*VCR'tQsEHp'?+*VCR'tQ_", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = WordUtils.abbreviate(",le&bodYq0R I#", (-1675), 1, "%E");
      assertEquals(",%E", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = WordUtils.wrap("", 3565, "", true);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = WordUtils.wrap("", (-242));
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = WordUtils.uncapitalize((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = WordUtils.uncapitalize("4rr#]&");
      assertEquals("4rr#]&", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = WordUtils.initials((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = WordUtils.initials("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully(" ");
      assertEquals(" ", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = WordUtils.capitalize((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = WordUtils.capitalize("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = WordUtils.initials(" ", (char[]) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      char[] charArray0 = new char[4];
      String string0 = WordUtils.uncapitalize("", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = WordUtils.uncapitalize("1.5", (char[]) null);
      assertEquals("1.5", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      char[] charArray0 = new char[2];
      String string0 = WordUtils.capitalizeFully("", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalizeFully((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully("YI2~h]dOMPy\"cG')_", (char[]) null);
      assertEquals("Yi2~h]dompy\"cg')_", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = WordUtils.capitalize("{@]HT'JaP2X=%,", (char[]) null);
      assertEquals("{@]HT'JaP2X=%,", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = WordUtils.wrap(" {>dd", 4, "", false);
      assertEquals("{>dd", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String string0 = WordUtils.wrap("5.1", 479, (String) null, false);
      assertEquals("5.1", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = WordUtils.wrap((String) null, (int) '5', "", false);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        WordUtils.abbreviate("5ajf |vaZ&", (-590), (-716), "5ajf |vaZ&");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String string0 = WordUtils.abbreviate("\">6+?", 1, 0, "m}TWbBk<=G*v=p");
      assertEquals("\"m}TWbBk<=G*v=p", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String string0 = WordUtils.abbreviate("$?", 14, (-1), "$ , m | d j ? I q # N");
      assertEquals("$?", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String string0 = WordUtils.abbreviate("", (-1229), (-985), "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String string0 = WordUtils.abbreviate((String) null, (-1229), (-1229), "P18^&=Rwe,o~NXn>7]");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String string0 = WordUtils.abbreviate("$, m|dj?Iq#N", 1, 14, "L#t:lYR>T&v`r|*PfM6");
      assertNotNull(string0);
      assertEquals("$,L#t:lYR>T&v`r|*PfM6", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[3] = 'Q';
      String string0 = WordUtils.initials("$, M|DJ?iQ#n", charArray0);
      assertEquals("$#", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.initials("]N]bm", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.initials("", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      char[] charArray0 = new char[5];
      String string0 = WordUtils.initials((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String string0 = WordUtils.swapCase("org.apache.commons.lang.WordUtils");
      assertEquals("ORG.APACHE.COMMONS.LANG.wORDuTILS", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String string0 = WordUtils.swapCase("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String string0 = WordUtils.swapCase((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = 'W';
      String string0 = WordUtils.uncapitalize("Windows", charArray0);
      assertEquals("Windows", string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.uncapitalize("4.1", charArray0);
      assertEquals("4.1", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.uncapitalize((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalizeFully("1.2", charArray0);
      assertEquals("1.2", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      char[] charArray0 = new char[5];
      String string0 = WordUtils.capitalizeFully("G", charArray0);
      assertEquals("G", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[1] = 'K';
      String string0 = WordUtils.capitalize("{5ajf |vaZ&*5ajf |vaZ&s5ajf |vaZ&n5ajf |vaZ&X5ajf |vaZ&Q5ajf |vaZ&n5ajf |vaZ&s5ajf |vaZ&u5ajf |vaZ&Y5ajf |vaZ&r5ajf |vaZ&K5ajf |vaZ&T5ajf |vaZ&J5ajf |vaZ&t5ajf |vaZ&25ajf |vaZ&D5ajf |vaZ&]5ajf |vaZ&e", charArray0);
      assertEquals("{5ajf |vaZ&*5ajf |vaZ&s5ajf |vaZ&n5ajf |vaZ&X5ajf |vaZ&Q5ajf |vaZ&n5ajf |vaZ&s5ajf |vaZ&u5ajf |vaZ&Y5ajf |vaZ&r5ajf |vaZ&K5ajf |vaZ&T5ajf |vaZ&J5ajf |vaZ&t5ajf |vaZ&25ajf |vaZ&D5ajf |vaZ&]5ajf |vaZ&e", string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalize("C", charArray0);
      assertEquals("C", string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      char[] charArray0 = new char[7];
      String string0 = WordUtils.capitalize("", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalize((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String string0 = WordUtils.wrap(" vs ", (-1304), "?1B ^OZ)y]8qx%WG", false);
      assertEquals("vs?1B ^OZ)y]8qx%WG", string0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      String string0 = WordUtils.wrap("{5ajf |vaZ&*5ajf |vaZ&s5ajf |vaZ&n5ajf |vaZ&X5ajf |vaZ&Q5ajf |vaZ&n5ajf |vaZ&s5ajf |vaZ&u5ajf |vaZ&Y5ajf |vaZ&r5ajf |vaZ&K5ajf |vaZ&T5ajf |vaZ&J5ajf |vaZ&t5ajf |vaZ&25ajf |vaZ&D5ajf |vaZ&]5ajf |vaZ&e", (-590));
      assertNotNull(string0);
      assertEquals("{5ajf\n|vaZ&*5ajf\n|vaZ&s5ajf\n|vaZ&n5ajf\n|vaZ&X5ajf\n|vaZ&Q5ajf\n|vaZ&n5ajf\n|vaZ&s5ajf\n|vaZ&u5ajf\n|vaZ&Y5ajf\n|vaZ&r5ajf\n|vaZ&K5ajf\n|vaZ&T5ajf\n|vaZ&J5ajf\n|vaZ&t5ajf\n|vaZ&25ajf\n|vaZ&D5ajf\n|vaZ&]5ajf\n|vaZ&e", string0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      WordUtils wordUtils0 = new WordUtils();
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      String string0 = WordUtils.uncapitalize("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String string0 = WordUtils.wrap((String) null, 0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      String string0 = WordUtils.initials("G+v");
      assertEquals("G", string0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      String string0 = WordUtils.capitalize("G");
      assertEquals("G", string0);
  }
}
