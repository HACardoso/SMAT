/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 16 13:14:08 GMT 2019
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang.WordUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class WordUtils_ESTest extends WordUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        WordUtils.abbreviate(" ", (-2288), (-367), " ");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = WordUtils.wrap("cAUGHT A sECURITYeXCEPTION READING THE SYSTEM PROPERTY '", 0, "Caught a SecurityException reading the system property '", true);
      WordUtils.abbreviate(string0, 2718, 0, "+p{Y3");
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      WordUtils.abbreviate("J&Zb!mDi7H7{<ev/", (-858), 2531, "");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      WordUtils.abbreviate(" ", 1, 1, (String) null);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      WordUtils.wrap((String) null, 0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      WordUtils.wrap("", (-3086));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      WordUtils.uncapitalize((String) null);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      WordUtils.uncapitalize("");
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      WordUtils.initials("tG)Eajtm)YnouS{Qr@");
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      WordUtils.initials("");
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      WordUtils.capitalizeFully((String) null);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      WordUtils.capitalize("");
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = WordUtils.wrap("Caught a SecurityException reading the system property '", (-2583), "Caught a SecurityException reading the system property '", true);
      char[] charArray0 = new char[4];
      // Undeclared exception!
      WordUtils.capitalizeFully(string0, charArray0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = WordUtils.initials((String) null, (char[]) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = WordUtils.uncapitalize("", (char[]) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalizeFully("", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully("VCDp", (char[]) null);
      assertEquals("Vcdp", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = 'n';
      String string0 = WordUtils.capitalize("java.vm.name", charArray0);
      assertEquals("Java.vm.nAme", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      char[] charArray0 = new char[1];
      String string0 = WordUtils.capitalize((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = WordUtils.wrap("H5^nx1Mv;A ;J*A0yj8", 1, "", false);
      assertEquals("H5^nx1Mv;A;J*A0yj8", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = WordUtils.wrap("`ToZO#0g", 1417, (String) null, false);
      assertEquals("`ToZO#0g", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = WordUtils.abbreviate(",;` eR3Q7pc c/", 0, (-992), "t");
      assertEquals("t", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = WordUtils.abbreviate(" ", (-1812), 2402, "5.0");
      assertEquals("5.0", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = WordUtils.abbreviate("CR4G", 2776, (-1), "CR4G");
      assertEquals("CR4G", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String string0 = WordUtils.abbreviate("", 2718, 2718, "Windows");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = WordUtils.abbreviate((String) null, 0, 0, "*S0H~|o");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String string0 = WordUtils.abbreviate("fXt/[R/", 1, 0, "");
      assertEquals("f", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String string0 = WordUtils.initials("H5^nx1Mv;A ;J*A0yj8", (char[]) null);
      assertEquals("H;", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.initials("1(#B'HoC", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      char[] charArray0 = new char[1];
      String string0 = WordUtils.initials("Mac", charArray0);
      assertEquals("M", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String string0 = WordUtils.initials("", (char[]) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String string0 = WordUtils.swapCase("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String string0 = WordUtils.swapCase("Caught a SecurityException reading the system property '");
      assertEquals("cAUGHT A sECURITYeXCEPTION READING THE SYSTEM PROPERTY '", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String string0 = WordUtils.swapCase((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[1] = 'D';
      String string0 = WordUtils.uncapitalize("JSTdDa?Kqwfax4", charArray0);
      assertEquals("jSTdDa?Kqwfax4", string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.uncapitalize("java.ext.dirs", charArray0);
      assertEquals("java.ext.dirs", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      char[] charArray0 = new char[3];
      String string0 = WordUtils.uncapitalize((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalizeFully("?,OIziA+B|Z^Dw+)-", charArray0);
      assertEquals("?,OIziA+B|Z^Dw+)-", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      char[] charArray0 = new char[7];
      String string0 = WordUtils.capitalizeFully((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      String string0 = WordUtils.capitalize("Caught a SecurityException reading the system property '");
      assertEquals("Caught A SecurityException Reading The System Property '", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalize("tG)Eajtm)YnouS{Qr@", charArray0);
      assertEquals("tG)Eajtm)YnouS{Qr@", string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      String string0 = WordUtils.capitalize("", (char[]) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String string0 = WordUtils.wrap(" ae$", 1, " Ae$", true);
      assertEquals("a Ae$e Ae$$", string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      String string0 = WordUtils.wrap("", 0, "Y?'1M@g8av&T", false);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      String string0 = WordUtils.wrap((String) null, 0, (String) null, true);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      WordUtils wordUtils0 = new WordUtils();
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      String string0 = WordUtils.uncapitalize("TG)Eajtm)YnouS{Qr@");
      assertEquals("tG)Eajtm)YnouS{Qr@", string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      String string0 = WordUtils.wrap("TG)Eajtm)YnouS{Qr@", (-1780));
      assertNotNull(string0);
      assertEquals("TG)Eajtm)YnouS{Qr@", string0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String string0 = WordUtils.initials((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully("X7po");
      assertEquals("x7po", string0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      String string0 = WordUtils.capitalize((String) null);
      assertNull(string0);
  }
}
